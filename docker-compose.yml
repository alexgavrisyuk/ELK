version: '3.2'
services:
  web:
    build: Frontend/OrderService
    ports:
      - "4200:4200"
  authservice:
    build: Backend/AuthenticationService/
    depends_on:
      - postgres
    ports:
      - "5000:5000"
  customerservice:
    build: Backend/CustomerService/
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "5001:5001"
  orderservice:
    build: Backend/OrderService/
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "5002:5002"
  # documentservice:
  #   build: Backend/DocumentService/
  #   depends_on:
  #     - mongodb
  #   ports:
  #     - "5003:5003"
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
  rabbitmq:
    image: rabbitmq
  # mongodb:
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      # ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  logstash:
    # build:
    #   context: logstash/
    #   args:
    #     ELK_VERSION: $ELK_VERSION
    # volumes:
    #   - type: bind
    #     source: ./logstash/config/logstash.yml
    #     target: /usr/share/logstash/config/logstash.yml
    #     read_only: true
    #   - type: bind
    #     source: ./logstash/pipeline
    #     target: /usr/share/logstash/pipeline
    #     read_only: true
    # ports:
    #   - "5010:5000/tcp"
    #   - "5010:5000/udp"
    #   - "9600:9600"
    # environment:
    #   LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    # depends_on:
    #   - elasticsearch
    #   - kibana
    #   - orderservice
    labels:
      com.example.service: "logstash"
      com.example.description: "For logging data"
      http.host: "0.0.0.0"
      xpack.monitoring.elasticsearch.hosts: "elasticsearch:9200" 
      xpack.monitoring.enabled: true
      xpack.monitoring.elasticsearch.username: elastic
      xpack.monitoring.elasticsearch.password: changeme

    image: logstash:5.4.3
    volumes:
      - ./:/logstash_dir
    # command: logstash -f /logstash/logstash.conf
    command: logstash -f /logstash_dir/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - "5959:5959"
volumes:
  elasticsearch: